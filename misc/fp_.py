# Integers over a prime p
# trying to understand modular arithmetic
# generated by GPT
# checked 08/01/2024

from fields import Field
from primes import inv


class Fp(Field):
    """
    This class overrides the usual integer arithmetic with modular arithmetic mod m
    """

    def __init__(self, v, m):
        """
        :param v: the value
        :param m: the module
        """
        super().__init__()
        self.v = v % m
        self.m = m

    def transform(self, v):
        return v if isinstance(a, Fp) else Fp(v, self.m)

    def eq(self, b):
        return self.v == b.v and self.m == b.m

    def lt(self, b):
        return self.v % self.m < b.v % self.m

    def add(self, b):
        return Fp(self.v + b.v, self.m)

    def sub(self, b):
        return Fp(self.v - b.v, self.m)

    def mul(self, b):
        return Fp(self.v * b.v, self.m)

    def div(self, b):
        return Fp(self.v * inv(b.v, self.m), self.m)

    def __str__(self):
        return f"{self.v} (mod {self.m})"
